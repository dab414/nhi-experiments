filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
inner_join(d) %>%
filter(bad_trial == 1) %>%
View()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
inner_join(d) %>%
group_by(participant) %>%
summarize(cond_count = nrow(.)[bad_trial==1], count = n()) %>%
head()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
inner_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
head()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
head()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
head()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
head()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) %>%
geom_histogram()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 10)
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 20)
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 30)
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 5)
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3)
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black')
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1)) %>%
head()
q()
library(tidyverse)
d <- read.csv('../../data/exp1_long_data_raw.csv')
line_data <- read.csv('../../data/exp1_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
line_data$line_orientation <- ifelse(line_data$top_x == line_data$bottom_x, 'vertical', ifelse(line_data$top_x > line_data$bottom_x, 'forward_slash', ifelse(line_data$top_x < line_data$bottom_x, 'back_slash', 'PROBLEM')))
bad_trial_code <- d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1))
bad_trial_code %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black') +
xlab('Percent Trials Dropped') +
ylab('Number of Participants')
## trim bad trials from thinnest lines data too
thinnest_lines <- read.csv("../../data/thinnest_lines_raw.csv")
thinnest_lines$drop_marker <- paste0(thinnest_lines$participant, '_', thinnest_lines$trial_count)
d$drop_marker <- paste0(d$participant, '_', d$trial_count)
bad_trial_code <- unite(bad_trial_code, drop_marker, participant, trial_count, sep = '_')
d <- d %>%
inner_join(bad_trial_code)
thinnest_lines <- thinnest_lines %>%
inner_join(bad_trial_code)
## drop bad trials and save
original_trials <- length(unique(d$participant)) * 100
d <- d[d$bad_trial == 0,]
final_trials <- d %>%
group_by(participant, trial_count) %>%
summarize(n()) %>%
nrow()
print(paste0('Percent of trials dropped: ', (1 - (final_trials / original_trials)) * 100))
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100), 2), '%')
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100, 2), '%'))
line_data
library(tidyverse)
d <- read.csv('../../data/exp1_long_data_raw.csv')
line_data <- read.csv('../../data/exp1_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
line_data$line_orientation <- ifelse(line_data$top_x == line_data$bottom_x, 'vertical', ifelse(line_data$top_x > line_data$bottom_x, 'forward_slash', ifelse(line_data$top_x < line_data$bottom_x, 'back_slash', 'PROBLEM')))
bad_trial_code <- d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1))
bad_trial_code %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black') +
xlab('Percent Trials Dropped') +
ylab('Number of Participants')
## trim bad trials from thinnest lines data too
thinnest_lines <- read.csv("../../data/thinnest_lines_raw.csv")
thinnest_lines$drop_marker <- paste0(thinnest_lines$participant, '_', thinnest_lines$trial_count)
line_data$drop_marker <- paste0(line_data$participant, '_', line_data$trial_count)
d$drop_marker <- paste0(d$participant, '_', d$trial_count)
bad_trial_code <- unite(bad_trial_code, drop_marker, participant, trial_count, sep = '_')
d <- d %>%
inner_join(bad_trial_code)
thinnest_lines <- thinnest_lines %>%
inner_join(bad_trial_code)
line_data <- line_data %>%
inner_join(bad_trial_code)
## drop bad trials and save
original_trials <- length(unique(d$participant)) * 100
d <- d[d$bad_trial == 0,]
final_trials <- d %>%
group_by(participant, trial_count) %>%
summarize(n()) %>%
nrow()
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100, 2), '%'))
write.csv(d, '../../data/exp1_long_data.csv', row.names = FALSE)
write.csv(line_data, '../../data/exp1_line_data.csv', row.names = FALSE)
write.csv(thinnest_lines, '../../data/thinnest_lines.csv', row.names = FALSE)
library(tidyverse)
d <- read.csv('../../data/exp1_long_data_raw.csv')
line_data <- read.csv('../../data/exp1_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
line_data$line_orientation <- ifelse(line_data$top_x == line_data$bottom_x, 'vertical', ifelse(line_data$top_x > line_data$bottom_x, 'forward_slash', ifelse(line_data$top_x < line_data$bottom_x, 'back_slash', 'PROBLEM')))
bad_trial_code <- d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1))
bad_trial_code %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black') +
xlab('Percent Trials Dropped') +
ylab('Number of Participants')
## trim bad trials from thinnest lines data too
thinnest_lines <- read.csv("../../data/thinnest_lines_raw.csv")
thinnest_lines$drop_marker <- paste0(thinnest_lines$participant, '_', thinnest_lines$trial_count)
line_data$drop_marker <- paste0(line_data$participant, '_', line_data$trial_count)
d$drop_marker <- paste0(d$participant, '_', d$trial_count)
bad_trial_code <- unite(bad_trial_code, drop_marker, participant, trial_count, sep = '_')
d <- d %>%
inner_join(bad_trial_code)
thinnest_lines <- thinnest_lines %>%
inner_join(bad_trial_code)
line_data <- line_data %>%
inner_join(bad_trial_code)
## drop bad trials and save
original_trials <- length(unique(d$participant)) * 100
d <- d[d$bad_trial == 0,]
d <- select(d, -bad_trial)
thinnest_lines <- thinnest_lines[d$bad_trial == 0,]
thinnest_lines <- select(thinnest_lines, -bad_trial)
line_data <- line_data[line_data$bad_trial == 0,]
line_data <- select(line_data, -bad_trial)
final_trials <- d %>%
group_by(participant, trial_count) %>%
summarize(n()) %>%
nrow()
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100, 2), '%'))
write.csv(d, '../../data/exp1_long_data.csv', row.names = FALSE)
write.csv(line_data, '../../data/exp1_line_data.csv', row.names = FALSE)
write.csv(thinnest_lines, '../../data/thinnest_lines.csv', row.names = FALSE)
q()
library(tidyverse)
d <- read.csv('../../data/exp1_long_data_raw.csv')
d <- read.csv('../../data/exp2_long_data_raw.csv')
line_data <- read.csv('../../data/exp2_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
library(tidyverse)
d <- read.csv('../../data/exp2_long_data_raw.csv')
line_data <- read.csv('../../data/exp2_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
line_data$line_orientation <- ifelse(line_data$top_x == line_data$bottom_x, 'vertical', ifelse(line_data$top_x > line_data$bottom_x, 'forward_slash', ifelse(line_data$top_x < line_data$bottom_x, 'back_slash', 'PROBLEM')))
bad_trial_code <- d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1))
bad_trial_code %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black') +
xlab('Percent Trials Dropped') +
ylab('Number of Participants')
## trim bad trials from thinnest lines data too
thinnest_lines <- read.csv("../../data/thinnest_lines_raw.csv")
thinnest_lines$drop_marker <- paste0(thinnest_lines$participant, '_', thinnest_lines$trial_count)
line_data$drop_marker <- paste0(line_data$participant, '_', line_data$trial_count)
d$drop_marker <- paste0(d$participant, '_', d$trial_count)
bad_trial_code <- unite(bad_trial_code, drop_marker, participant, trial_count, sep = '_')
d <- d %>%
inner_join(bad_trial_code)
thinnest_lines <- thinnest_lines %>%
inner_join(bad_trial_code)
line_data <- line_data %>%
inner_join(bad_trial_code)
## drop bad trials and save
original_trials <- length(unique(d$participant)) * 100
d <- d[d$bad_trial == 0,]
d <- select(d, -bad_trial)
thinnest_lines <- thinnest_lines[d$bad_trial == 0,]
thinnest_lines <- select(thinnest_lines, -bad_trial)
line_data <- line_data[line_data$bad_trial == 0,]
line_data <- select(line_data, -bad_trial)
final_trials <- d %>%
group_by(participant, trial_count) %>%
summarize(n()) %>%
nrow()
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100, 2), '%'))
write.csv(d, '../../data/exp1_long_data.csv', row.names = FALSE)
write.csv(line_data, '../../data/exp1_line_data.csv', row.names = FALSE)
write.csv(thinnest_lines, '../../data/thinnest_lines.csv', row.names = FALSE)
q()
library(tidyverse)
d <- read.csv('../../data/exp2_long_data_raw.csv')
line_data <- read.csv('../../data/exp2_line_data_raw.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
line_data$line_orientation <- ifelse(line_data$top_x == line_data$bottom_x, 'vertical', ifelse(line_data$top_x > line_data$bottom_x, 'forward_slash', ifelse(line_data$top_x < line_data$bottom_x, 'back_slash', 'PROBLEM')))
bad_trial_code <- d %>%
group_by(participant) %>%
summarize(prompt_rt_sec_m = mean(prompt_rt_sec), prompt_rt_sec_sd = sd(prompt_rt_sec), selection_rt_ms_m = mean(selection_rt_ms), selection_rt_ms_sd = sd(selection_rt_ms)) %>%
inner_join(d) %>%
mutate(bad_trial = ifelse(!is.na(accuracy), 0, ifelse((prompt_rt_sec > (2 * prompt_rt_sec_sd) + prompt_rt_sec_m & prompt_rt_sec > 15) | (selection_rt_ms > (2 * selection_rt_ms_sd) + selection_rt_ms_m & selection_rt_ms > 15000), 1, 0))) %>%
filter(bad_trial == 1) %>%
group_by(participant, trial_count) %>%
summarize(count = n()) %>%
mutate(bad_trial = 1) %>%
right_join(d) %>%
group_by(participant, trial_count) %>%
summarize(bad_trial = sum(bad_trial)) %>%
mutate(bad_trial = ifelse(is.na(bad_trial), 0, 1))
bad_trial_code %>%
group_by(participant) %>%
summarize(drop_count = sum(bad_trial), count = n()) %>%
ggplot(aes(x = drop_count)) +
geom_histogram(binwidth = 3, color = 'black') +
xlab('Percent Trials Dropped') +
ylab('Number of Participants')
## trim bad trials from thinnest lines data too
thinnest_lines <- read.csv("../../data/thinnest_lines_raw.csv")
thinnest_lines$drop_marker <- paste0(thinnest_lines$participant, '_', thinnest_lines$trial_count)
line_data$drop_marker <- paste0(line_data$participant, '_', line_data$trial_count)
d$drop_marker <- paste0(d$participant, '_', d$trial_count)
bad_trial_code <- unite(bad_trial_code, drop_marker, participant, trial_count, sep = '_')
d <- d %>%
inner_join(bad_trial_code)
thinnest_lines <- thinnest_lines %>%
inner_join(bad_trial_code)
line_data <- line_data %>%
inner_join(bad_trial_code)
## drop bad trials and save
original_trials <- length(unique(d$participant)) * 100
d <- d[d$bad_trial == 0,]
d <- select(d, -bad_trial)
thinnest_lines <- thinnest_lines[d$bad_trial == 0,]
thinnest_lines <- select(thinnest_lines, -bad_trial)
line_data <- line_data[line_data$bad_trial == 0,]
line_data <- select(line_data, -bad_trial)
final_trials <- d %>%
group_by(participant, trial_count) %>%
summarize(n()) %>%
nrow()
print(paste0('Percent of trials dropped: ', round((1 - (final_trials / original_trials)) * 100, 2), '%'))
write.csv(d, '../../data/exp2_long_data.csv', row.names = FALSE)
write.csv(line_data, '../../data/exp2_line_data.csv', row.names = FALSE)
write.csv(thinnest_lines, '../../data/thinnest_lines.csv', row.names = FALSE)
q()
q()
