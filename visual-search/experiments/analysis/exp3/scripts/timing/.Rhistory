mutate(experiment = 'Experiment 2',
selection_rt_ms_relative = ifelse(trial_count == lag(trial_count), selection_rt_ms - lag(selection_rt_ms), selection_rt_ms)) %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines, experiment)
p <- rbind(e1,e2,e3)
p %>%
mutate(indecision_trial = factor(indecision_trial)) %>% #,
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial, experiment) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial, experiment) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_grid(experiment~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
p <- d %>%
mutate(indecision_trial = factor(indecision_trial)) %>%
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(indecision_trial, possible_thinnest_lines) %>%
summarize(count = n())
p2 <- p %>%
group_by(indecision_trial) %>%
summarize(overall_count = sum(count))
p %>%
inner_join(p2) %>%
mutate(proportion = count / overall_count) %>%
ggplot(aes(x = possible_thinnest_lines, y = proportion)) +
geom_bar(stat = 'identity') +
facet_wrap(~indecision_trial) +
labs(
x = 'Possible Thinnest Lines',
y = 'Proportion of Trials'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
head(d)
d %>%
mutate(indecision_trial = factor(indecision_trial), is_anomaly_trial = factor(is_anomaly_trial)) %>%
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision'),
is_anomaly_trial = recode(is_anomaly_trial, 'False' = 'No Anomaly', 'True' = 'Anomaly')) %>%
group_by(participant, trial_count, indecision_trial, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_grid(is_anomaly_trial~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = is_anomaly_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = is_anomaly_trial), alpha = .5) +
geom_line(aes(color = is_anomaly_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Indecision Trial',
color = 'Indecision Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = is_anomaly_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = is_anomaly_trial), alpha = .5) +
geom_line(aes(color = is_anomaly_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial',
color = 'Anomaly Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
head()
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
head()
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial',
) +
theme_bw() +
theme(legend.position = c(.8,.8))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
ggplot(aes(x = phase, y = rt, group = is_anomaly_trial)) +
geom_bar(stat = 'identity', aes(fill = is_anomaly_trial), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), position = position_dodge(width = .9), width = .5) +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial',
) +
theme_bw() +
theme(legend.position = c(.8,.8))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
head()
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
ggplot(aes(x = phase, y = rt, group = is_anomaly_trial)) +
geom_bar(stat = 'identity', aes(fill = is_anomaly_trial), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), position = position_dodge(width = .9), width = .5) +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
head()
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
ggplot(aes(x = phase, y = rt, group = is_anomaly_trial)) +
geom_bar(stat = 'identity', aes(fill = is_anomaly_trial), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), position = position_dodge(width = .9), width = .5) +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8))
head(d)
q()
library(tidyverse)
library(data.table)
d <- read.csv('../../data/exp3_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
line_data <- read.csv('../../data/exp3_line_data.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
## summarize hits and false alarms
summary_data <- d %>%
filter(!(is.na(accuracy_type))) %>%
mutate(hit = ifelse(accuracy_type == 'hit', 1, 0), false_alarm = ifelse(accuracy_type == 'false_alarm', 1, 0)) %>%
group_by(line_orientation) %>%
summarize(hits = sum(hit), false_alarms = sum(false_alarm))
## calculate relative line rt
d$selection_rt_ms_relative <- ifelse(d$trial_count == lag(d$trial_count), d$selection_rt_ms - lag(d$selection_rt_ms), d$selection_rt_ms)
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, indecision_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = indecision_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = indecision_trial), alpha = .5) +
geom_line(aes(color = indecision_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Indecision Trial',
color = 'Indecision Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>% #,
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_wrap(~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
e3 <- d %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines) %>%
mutate(experiment = 'Experiment 3')
e1 <- read.csv('../../../../exp1/analysis/data/exp1_long_data.csv')
e1 <- read.csv('../../../../exp1/data/exp1_long_data.csv')
e1 <- read.csv('../../../exp1/data/exp1_long_data')
e1 <- read.csv('../../../exp1/data/exp1_long_data.csv')
library(tidyverse)
library(data.table)
d <- read.csv('../../data/exp3_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
line_data <- read.csv('../../data/exp3_line_data.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
## summarize hits and false alarms
summary_data <- d %>%
filter(!(is.na(accuracy_type))) %>%
mutate(hit = ifelse(accuracy_type == 'hit', 1, 0), false_alarm = ifelse(accuracy_type == 'false_alarm', 1, 0)) %>%
group_by(line_orientation) %>%
summarize(hits = sum(hit), false_alarms = sum(false_alarm))
## calculate relative line rt
d$selection_rt_ms_relative <- ifelse(d$trial_count == lag(d$trial_count), d$selection_rt_ms - lag(d$selection_rt_ms), d$selection_rt_ms)
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, indecision_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = indecision_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = indecision_trial), alpha = .5) +
geom_line(aes(color = indecision_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Indecision Trial',
color = 'Indecision Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>% #,
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_wrap(~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
e3 <- d %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines) %>%
mutate(experiment = 'Experiment 3')
e1 <- read.csv('../../../exp1/data/exp1_long_data.csv')
e1 <- e1 %>%
mutate(experiment = 'Experiment 1',
selection_rt_ms_relative = ifelse(trial_count == lag(trial_count), selection_rt_ms - lag(selection_rt_ms), selection_rt_ms)) %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines, experiment)
e2 <- read.csv('../../../../exp2/analysis/data/exp2_long_data.csv')
e2 <- read.csv('../../../exp2/data/exp2_long_data.csv')
library(tidyverse)
library(data.table)
d <- read.csv('../../data/exp3_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
line_data <- read.csv('../../data/exp3_line_data.csv')
head(d)
N <- d %>%
group_by(participant) %>%
summarize(n()) %>%
nrow()
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
## summarize hits and false alarms
summary_data <- d %>%
filter(!(is.na(accuracy_type))) %>%
mutate(hit = ifelse(accuracy_type == 'hit', 1, 0), false_alarm = ifelse(accuracy_type == 'false_alarm', 1, 0)) %>%
group_by(line_orientation) %>%
summarize(hits = sum(hit), false_alarms = sum(false_alarm))
## calculate relative line rt
d$selection_rt_ms_relative <- ifelse(d$trial_count == lag(d$trial_count), d$selection_rt_ms - lag(d$selection_rt_ms), d$selection_rt_ms)
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, indecision_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = indecision_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = indecision_trial), alpha = .5) +
geom_line(aes(color = indecision_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Indecision Trial',
color = 'Indecision Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(indecision_trial = factor(indecision_trial)) %>% #,
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_wrap(~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
e3 <- d %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines) %>%
mutate(experiment = 'Experiment 3')
e1 <- read.csv('../../../exp1/data/exp1_long_data.csv')
e1 <- e1 %>%
mutate(experiment = 'Experiment 1',
selection_rt_ms_relative = ifelse(trial_count == lag(trial_count), selection_rt_ms - lag(selection_rt_ms), selection_rt_ms)) %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines, experiment)
e2 <- read.csv('../../../exp2/data/exp2_long_data.csv')
e2 <- e2 %>%
mutate(experiment = 'Experiment 2',
selection_rt_ms_relative = ifelse(trial_count == lag(trial_count), selection_rt_ms - lag(selection_rt_ms), selection_rt_ms)) %>%
select(participant, trial_count, indecision_trial, prompt_rt_sec, selection_rt_ms_relative, possible_thinnest_lines, experiment)
p <- rbind(e1,e2,e3)
p %>%
mutate(indecision_trial = factor(indecision_trial)) %>% #,
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial, experiment) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial, experiment) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_grid(experiment~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
p <- d %>%
mutate(indecision_trial = factor(indecision_trial)) %>%
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision')) %>%
group_by(participant, trial_count, indecision_trial) %>%
summarize(possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(indecision_trial, possible_thinnest_lines) %>%
summarize(count = n())
p2 <- p %>%
group_by(indecision_trial) %>%
summarize(overall_count = sum(count))
p %>%
inner_join(p2) %>%
mutate(proportion = count / overall_count) %>%
ggplot(aes(x = possible_thinnest_lines, y = proportion)) +
geom_bar(stat = 'identity') +
facet_wrap(~indecision_trial) +
labs(
x = 'Possible Thinnest Lines',
y = 'Proportion of Trials'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(indecision_trial = factor(indecision_trial), is_anomaly_trial = factor(is_anomaly_trial)) %>%
mutate(indecision_trial = recode(indecision_trial, `0` = 'No Indecision', `1` = 'Indecision'),
is_anomaly_trial = recode(is_anomaly_trial, 'False' = 'No Anomaly', 'True' = 'Anomaly')) %>%
group_by(participant, trial_count, indecision_trial, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt_ms = mean(prompt_rt_sec * 1000), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
group_by(trial_count, indecision_trial, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms), prompt_rt_ms = mean(prompt_rt_ms), possible_thinnest_lines = max(possible_thinnest_lines)) %>%
ggplot(aes(x = prompt_rt_ms, y = selection_rt_ms)) +
geom_point(aes(size = possible_thinnest_lines, color = possible_thinnest_lines)) +
geom_smooth(method = 'lm') +
facet_grid(is_anomaly_trial~indecision_trial) +
labs(
x = 'Prompt RT (ms)',
y = 'Selection RT (ms)',
size = 'Possible Thinnest Lines',
color = 'Possible Thinnest Lines',
caption = 'Each dot represents a trial mean'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(trial_count, is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms), se = sd(rt_ms) / sqrt(N)) %>%
ggplot(aes(x = trial_count, y = rt, group = is_anomaly_trial)) +
geom_ribbon(aes(ymin = rt - se, ymax = rt + se, fill = is_anomaly_trial), alpha = .5) +
geom_line(aes(color = is_anomaly_trial)) +
facet_wrap(~phase, scales = 'free') +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial',
color = 'Anomaly Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8),
strip.background = element_rect(color = 'black', fill = 'white'))
d %>%
mutate(is_anomaly_trial = factor(is_anomaly_trial)) %>%
group_by(participant, trial_count, is_anomaly_trial) %>%
summarize(selection_rt_ms = mean(selection_rt_ms_relative), prompt_rt = mean(prompt_rt_sec * 1000)) %>%
gather(phase, rt_ms, selection_rt_ms, prompt_rt) %>%
group_by(is_anomaly_trial, phase) %>%
summarize(rt = mean(rt_ms, na.rm = TRUE), se = sd(rt_ms, na.rm = TRUE) / sqrt(N)) %>%
ggplot(aes(x = phase, y = rt, group = is_anomaly_trial)) +
geom_bar(stat = 'identity', aes(fill = is_anomaly_trial), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = rt - se, ymax = rt + se), position = position_dodge(width = .9), width = .5) +
labs(
x = 'Trial',
y = 'Response Time (ms)',
fill = 'Anomaly Trial'
) +
theme_bw() +
theme(legend.position = c(.8,.8))
q()
