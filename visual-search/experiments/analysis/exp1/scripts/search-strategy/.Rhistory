d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
head(d)
head(thinnest_lines)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
head(d)
head(thinnest_lines)
head(d)
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line() +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3)
library(tidyverse)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
d <- d[,c('participant', 'trial_count', 'prompt_rt_sec', 'selection_rt_sec', 'selected_or_released', 'possible_thinnest_lines', 'accuracy')]
head(d)
d <- d[,c('participant', 'trial_count', 'prompt_rt_sec', 'selection_rt_ms', 'selected_or_released', 'possible_thinnest_lines', 'accuracy')]
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line() +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3)
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line() +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in \nViewing Period(s)'
)
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line() +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in \nViewing Period(s)'
) +
theme_bw()
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line() +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in Viewing Period(s)'
) +
theme_bw()
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line(data = s_data, aes(group = participant), alpha = .4) +
geom_line(size = 2.5) +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in Viewing Period (s)'
) +
theme_bw()
s_data <- d %>%
filter(!(is.na(accuracy))) %>%
group_by(participant, trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec))
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line(data = s_data, aes(group = participant), alpha = .4) +
geom_line(size = 2.5) +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in Viewing Period (s)'
) +
theme_bw()
head(d)
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms)) %>%
ggplot(aes(x = selection_rt_ms, y = prompt_rt_sec)) +
geom_point()
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms)) %>%
ggplot(aes(x = selection_rt_ms, y = prompt_rt_sec/1000)) +
geom_point() +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)'
)
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point() +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)'
)
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point() +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
caption = 'Each point represents one participant'
) +
theme_bw()
head(d)
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
caption = 'Each point represents one participant'
) +
theme_bw()
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant'
) +
theme_bw()
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE, possible_thinnest_lines = mean(possible_thinnest_lines))) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant'
) +
facet_wrap(~possible_thinnest_lines) +
theme_bw()
d %>%
group_by(participant, possible_thinnest_lines) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant'
) +
facet_wrap(~possible_thinnest_lines) +
theme_bw()
d %>%
filter(possible_thinnest_lines < 11) %>%
group_by(participant, possible_thinnest_lines) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant'
) +
facet_wrap(~possible_thinnest_lines) +
theme_bw()
d %>%
filter(possible_thinnest_lines < 11) %>%
group_by(participant, possible_thinnest_lines) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant; Each facet represents the number of thinnest lines on a trial.'
) +
facet_wrap(~possible_thinnest_lines) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
ggsave('selection_times.png', height = 5.5, width = 7.5, units = 'in')
q()
library(tidyverse)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
d <- d[,c('participant', 'trial_count', 'prompt_rt_sec', 'selection_rt_ms', 'selected_or_released', 'possible_thinnest_lines', 'accuracy')]
s_data <- d %>%
filter(!(is.na(accuracy))) %>%
group_by(participant, trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec))
d %>%
filter(!(is.na(accuracy))) %>%
group_by(trial_count) %>%
summarize(rt_sec = mean(prompt_rt_sec), se = sd(prompt_rt_sec) / N) %>%
ggplot(aes(x = trial_count, y = rt_sec)) +
geom_line(data = s_data, aes(group = participant), alpha = .4) +
geom_line(size = 2.5) +
geom_ribbon(aes(ymin = rt_sec - se, ymax = rt_sec + se), alpha = .3) +
labs(
x = 'Trial',
y = 'Response Time  in Viewing Period (s)'
) +
theme_bw()
## this computation includes in selection time the time it took them to press the submit button
## also im including line releases
d %>%
group_by(participant) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant'
) +
theme_bw()
d %>%
filter(possible_thinnest_lines < 11) %>%
group_by(participant, possible_thinnest_lines) %>%
summarize(prompt_rt_sec = mean(prompt_rt_sec), selection_rt_ms = mean(selection_rt_ms), accuracy = mean(accuracy, na.rm = TRUE)) %>%
ggplot(aes(x = selection_rt_ms/1000, y = prompt_rt_sec)) +
geom_point(aes(color = accuracy)) +
labs(
x = 'Line Selection RT (s)',
y = 'View Period RT (s)',
color = 'Accuracy',
caption = 'Each point represents one participant; Each facet represents the number of thinnest lines on a trial.'
) +
facet_wrap(~possible_thinnest_lines) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
ggsave('selection_times.png', height = 5.5, width = 7.5, units = 'in')
q()
