theme(strip.background = element_rect(color = 'black', fill = 'white'))
acc <- ezANOVA(wid = subject, within = click_order, dv = Accuracy, data = subject_summary)
rt <- ezANOVA(wid = subject, within = click_order, dv = RT, data = subject_summary)
acc
rt
source('../compute_quadrants.r')
line_data <- read.csv('../../data/exp1_line_data.csv')
d <- compute_quadrants(d, line_data)
d %>%
group_by(subject, quadrant, click_order) %>%
summarize(count = n()) %>%
group_by(quadrant, click_order) %>%
summarize(average_sum = mean(count)) %>%
ggplot(aes(x = quadrant, y = average_sum, group = click_order)) +
geom_bar(stat = 'identity', aes(fill = factor(click_order)), color = 'black') +
scale_fill_brewer() +
theme_bw() +
labs(
x = 'Area on Grid',
y = 'Average Proportion',
fill = 'Click Order'
)
d <- read.csv('../../data/exp1_long_data.csv')
print(nrow(d))
trial_summary <- d %>%
group_by(trial_count, participant) %>%
summarize(count = n()) %>%
mutate(keep = ifelse(count > 4, 1, 0))
p_summary <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(total_trials = n())
d <- trial_summary %>%
inner_join(d) %>%
filter(keep == 1) %>%
select(-keep)
t <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(deselect_trials = n())
p_summary <- cbind(p_summary, t[,'deselect_trials'])
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = reorder(participant, proportion_deselect), y = proportion_deselect)) +
geom_bar(stat='identity') +
labs(
x = 'Participant',
y = 'Proportion of Trials Deselecting Lines'
) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank())
p_summary <- d %>%
## take out submit button presses
filter(is.na(accuracy)) %>%
group_by(participant) %>%
summarize(selection_rt_ms = mean(selection_rt_ms)) %>%
inner_join(p_summary)
head(p_summary)
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = proportion_deselect, y = selection_rt_ms)) +
geom_point(aes(group = participant)) +
labs(
x = 'Proportion of Trials Deselecting Lines',
y = 'Average Line Selection RT (ms)'
) +
theme_bw()
1()
n
q()
library(tidyverse)
library(data.table)
library(ggridges)
library(ez)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
if (!'accuracy_type' %in% colnames(d)) {
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
}
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
colnames(d)[which(colnames(d) == 'participant')] <- 'subject'
click_summary <- d %>%
group_by(subject, trial_count) %>%
summarize(count = n()) %>%
filter(count == 4) %>%
select(-count) %>%
mutate(key = 'keep')
d <- d %>%
inner_join(click_summary) %>%
filter(key == 'keep', is.na(accuracy)) %>%
select(-key)
d$selection_rt_ms_relative <- ifelse(shift(d$click_order) < d$click_order, d$selection_rt_ms - shift(d$selection_rt_ms), d$selection_rt_ms)
d$selection_rt_ms_relative[1] <- d$selection_rt_ms[1]
d$accuracy_numeric <- ifelse(d$accuracy_type == 'hit', 1, 0)
subject_summary <- d %>%
group_by(subject, click_order) %>%
summarize(RT = mean(selection_rt_ms_relative), Accuracy = mean(accuracy_numeric))
subject_summary %>%
gather(outcome, value, RT:Accuracy) %>%
ggplot(aes(x = value, y = click_order, group = click_order)) +
geom_density_ridges(fill = 'steel blue', alpha = .8) +
facet_wrap(~outcome, scales = 'free') +
labs(
x = '',
y = 'Click Order'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
acc <- ezANOVA(wid = subject, within = click_order, dv = Accuracy, data = subject_summary)
rt <- ezANOVA(wid = subject, within = click_order, dv = RT, data = subject_summary)
acc
rt
source('../compute_quadrants.r')
line_data <- read.csv('../../data/exp1_line_data.csv')
d <- compute_quadrants(d, line_data)
d %>%
group_by(subject, quadrant, click_order) %>%
summarize(count = n()) %>%
group_by(quadrant, click_order) %>%
summarize(average_sum = mean(count)) %>%
ggplot(aes(x = quadrant, y = average_sum, group = click_order)) +
geom_bar(stat = 'identity', aes(fill = factor(click_order)), color = 'black') +
scale_fill_brewer() +
theme_bw() +
labs(
x = 'Area on Grid',
y = 'Average Proportion',
fill = 'Click Order'
)
d <- read.csv('../../data/exp1_long_data.csv')
print(nrow(d))
trial_summary <- d %>%
group_by(trial_count, participant) %>%
summarize(count = n()) %>%
mutate(keep = ifelse(count > 4, 1, 0))
p_summary <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(total_trials = n())
d <- trial_summary %>%
inner_join(d) %>%
filter(keep == 1) %>%
select(-keep)
t <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(deselect_trials = n())
p_summary <- cbind(p_summary, t[,'deselect_trials'])
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = reorder(participant, proportion_deselect), y = proportion_deselect)) +
geom_bar(stat='identity') +
labs(
x = 'Participant',
y = 'Proportion of Trials Deselecting Lines'
) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank())
p_summary <- d %>%
## take out submit button presses
filter(is.na(accuracy)) %>%
group_by(participant) %>%
summarize(selection_rt_ms = mean(selection_rt_ms)) %>%
inner_join(p_summary)
head(p_summary)
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = proportion_deselect, y = selection_rt_ms)) +
geom_point(aes(group = participant)) +
labs(
x = 'Proportion of Trials Deselecting Lines',
y = 'Average Line Selection RT (ms)'
) +
theme_bw()
head(D)
head(d)
colnames(d)
head(d$overall_time)
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(count = n()) %>%
head()
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(count = n()) %>%
filter(selected_or_released == 'selected') %>%
haed()
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(count = n()) %>%
filter(selected_or_released == 'selected') %>%
head()
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(select_count = n()) %>%
filter(selected_or_released == 'selected') %>%
group_by(select_count) %>%
summarize(count = n()) %>%
head()
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(select_count = n()) %>%
filter(selected_or_released == 'selected') %>%
group_by(select_count) %>%
summarize(count = n())
head(d)
d <- read.csv('../../data/exp1_long_data.csv')
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(select_count = n()) %>%
filter(selected_or_released == 'selected') %>%
group_by(select_count) %>%
summarize(count = n())
library(tidyverse)
library(data.table)
library(ggridges)
library(ez)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
if (!'accuracy_type' %in% colnames(d)) {
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
}
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
colnames(d)[which(colnames(d) == 'participant')] <- 'subject'
click_summary <- d %>%
group_by(subject, trial_count) %>%
summarize(count = n()) %>%
filter(count == 4) %>%
select(-count) %>%
mutate(key = 'keep')
d <- d %>%
inner_join(click_summary) %>%
filter(key == 'keep', is.na(accuracy)) %>%
select(-key)
d$selection_rt_ms_relative <- ifelse(shift(d$click_order) < d$click_order, d$selection_rt_ms - shift(d$selection_rt_ms), d$selection_rt_ms)
d$selection_rt_ms_relative[1] <- d$selection_rt_ms[1]
d$accuracy_numeric <- ifelse(d$accuracy_type == 'hit', 1, 0)
subject_summary <- d %>%
group_by(subject, click_order) %>%
summarize(RT = mean(selection_rt_ms_relative), Accuracy = mean(accuracy_numeric))
subject_summary %>%
gather(outcome, value, RT:Accuracy) %>%
ggplot(aes(x = value, y = click_order, group = click_order)) +
geom_density_ridges(fill = 'steel blue', alpha = .8) +
facet_wrap(~outcome, scales = 'free') +
labs(
x = '',
y = 'Click Order'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
acc <- ezANOVA(wid = subject, within = click_order, dv = Accuracy, data = subject_summary)
rt <- ezANOVA(wid = subject, within = click_order, dv = RT, data = subject_summary)
acc
rt
source('../compute_quadrants.r')
line_data <- read.csv('../../data/exp1_line_data.csv')
d <- compute_quadrants(d, line_data)
d %>%
group_by(subject, quadrant, click_order) %>%
summarize(count = n()) %>%
group_by(quadrant, click_order) %>%
summarize(average_sum = mean(count)) %>%
ggplot(aes(x = quadrant, y = average_sum, group = click_order)) +
geom_bar(stat = 'identity', aes(fill = factor(click_order)), color = 'black') +
scale_fill_brewer() +
theme_bw() +
labs(
x = 'Area on Grid',
y = 'Average Proportion',
fill = 'Click Order'
)
d <- read.csv('../../data/exp1_long_data.csv')
print(nrow(d))
trial_summary <- d %>%
group_by(trial_count, participant) %>%
summarize(count = n()) %>%
mutate(keep = ifelse(count > 4, 1, 0))
p_summary <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(total_trials = n())
d <- trial_summary %>%
inner_join(d) %>%
filter(keep == 1) %>%
select(-keep)
t <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(deselect_trials = n())
p_summary <- cbind(p_summary, t[,'deselect_trials'])
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = reorder(participant, proportion_deselect), y = proportion_deselect)) +
geom_bar(stat='identity') +
labs(
x = 'Participant',
y = 'Proportion of Trials Deselecting Lines'
) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank())
d <- read.csv('../../data/exp1_long_data.csv')
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(select_count = n()) %>%
filter(selected_or_released == 'selected') %>%
group_by(select_count) %>%
summarize(count = n())
p_summary <- d %>%
## take out submit button presses
filter(is.na(accuracy)) %>%
group_by(participant) %>%
summarize(selection_rt_ms = mean(selection_rt_ms)) %>%
inner_join(p_summary)
head(p_summary)
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = proportion_deselect, y = selection_rt_ms)) +
geom_point(aes(group = participant)) +
labs(
x = 'Proportion of Trials Deselecting Lines',
y = 'Average Line Selection RT (ms)'
) +
theme_bw()
q()
library(tidyverse)
library(data.table)
library(ggridges)
library(ez)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
if (!'accuracy_type' %in% colnames(d)) {
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
}
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
colnames(d)[which(colnames(d) == 'participant')] <- 'subject'
click_summary <- d %>%
group_by(subject, trial_count) %>%
summarize(count = n()) %>%
filter(count == 4) %>%
select(-count) %>%
mutate(key = 'keep')
d <- d %>%
inner_join(click_summary) %>%
filter(key == 'keep', is.na(accuracy)) %>%
select(-key)
d$selection_rt_ms_relative <- ifelse(shift(d$click_order) < d$click_order, d$selection_rt_ms - shift(d$selection_rt_ms), d$selection_rt_ms)
d$selection_rt_ms_relative[1] <- d$selection_rt_ms[1]
d$accuracy_numeric <- ifelse(d$accuracy_type == 'hit', 1, 0)
subject_summary <- d %>%
group_by(subject, click_order) %>%
summarize(RT = mean(selection_rt_ms_relative), Accuracy = mean(accuracy_numeric))
subject_summary %>%
gather(outcome, value, RT:Accuracy) %>%
ggplot(aes(x = value, y = click_order, group = click_order)) +
geom_density_ridges(fill = 'steel blue', alpha = .8) +
facet_wrap(~outcome, scales = 'free') +
labs(
x = '',
y = 'Click Order'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
acc <- ezANOVA(wid = subject, within = click_order, dv = Accuracy, data = subject_summary)
rt <- ezANOVA(wid = subject, within = click_order, dv = RT, data = subject_summary)
acc
rt
source('../compute_quadrants.r')
line_data <- read.csv('../../data/exp1_line_data.csv')
d <- compute_quadrants(d, line_data)
d %>%
group_by(subject, quadrant, click_order) %>%
summarize(count = n()) %>%
group_by(quadrant, click_order) %>%
summarize(average_sum = mean(count)) %>%
ggplot(aes(x = quadrant, y = average_sum, group = click_order)) +
geom_bar(stat = 'identity', aes(fill = factor(click_order)), color = 'black') +
scale_fill_brewer() +
theme_bw() +
labs(
x = 'Area on Grid',
y = 'Average Proportion',
fill = 'Click Order'
)
d <- read.csv('../../data/exp1_long_data.csv')
print(nrow(d))
trial_summary <- d %>%
group_by(trial_count, participant) %>%
summarize(count = n()) %>%
mutate(keep = ifelse(count > 4, 1, 0))
p_summary <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(total_trials = n())
d <- trial_summary %>%
inner_join(d) %>%
filter(keep == 1) %>%
select(-keep)
t <- d %>%
filter(click_order == 1) %>%
group_by(participant) %>%
summarize(deselect_trials = n())
p_summary <- cbind(p_summary, t[,'deselect_trials'])
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = reorder(participant, proportion_deselect), y = proportion_deselect)) +
geom_bar(stat='identity') +
labs(
x = 'Participant',
y = 'Proportion of Trials Deselecting Lines'
) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank())
d <- read.csv('../../data/exp1_long_data.csv')
d %>%
group_by(participant, trial_count, selected_or_released) %>%
summarize(select_count = n()) %>%
filter(selected_or_released == 'selected') %>%
group_by(select_count) %>%
summarize(count = n())
p_summary <- d %>%
## take out submit button presses
filter(is.na(accuracy)) %>%
group_by(participant) %>%
summarize(selection_rt_ms = mean(selection_rt_ms)) %>%
inner_join(p_summary)
head(p_summary)
p_summary %>%
mutate(proportion_deselect = deselect_trials / total_trials) %>%
ggplot(aes(x = proportion_deselect, y = selection_rt_ms)) +
geom_point(aes(group = participant)) +
labs(
x = 'Proportion of Trials Deselecting Lines',
y = 'Average Line Selection RT (ms)'
) +
theme_bw()
library(tidyverse)
library(data.table)
library(ggridges)
library(ez)
d <- read.csv('../../data/exp1_long_data.csv')
thinnest_lines <- read.csv('../../data/thinnest_lines.csv')
if (!'accuracy_type' %in% colnames(d)) {
source('../compute_accuracy_columns.r')
d <- compute_accuracy_columns(d, thinnest_lines)
}
N <- length(unique(d$participant))
head(d)
head(thinnest_lines)
colnames(d)[which(colnames(d) == 'participant')] <- 'subject'
click_summary <- d %>%
group_by(subject, trial_count) %>%
summarize(count = n()) %>%
filter(count == 4) %>%
select(-count) %>%
mutate(key = 'keep')
d <- d %>%
inner_join(click_summary) %>%
filter(key == 'keep', is.na(accuracy)) %>%
select(-key)
d$selection_rt_ms_relative <- ifelse(shift(d$click_order) < d$click_order, d$selection_rt_ms - shift(d$selection_rt_ms), d$selection_rt_ms)
d$selection_rt_ms_relative[1] <- d$selection_rt_ms[1]
d$accuracy_numeric <- ifelse(d$accuracy_type == 'hit', 1, 0)
subject_summary <- d %>%
group_by(subject, click_order) %>%
summarize(RT = mean(selection_rt_ms_relative), Accuracy = mean(accuracy_numeric))
subject_summary %>%
gather(outcome, value, RT:Accuracy) %>%
ggplot(aes(x = value, y = click_order, group = click_order)) +
geom_density_ridges(fill = 'steel blue', alpha = .8) +
facet_wrap(~outcome, scales = 'free') +
labs(
x = '',
y = 'Click Order'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'))
ggsave('click_order.pdf', height = 1080/96, width = 1920/2/96)
d$selection_rt_ms_relative <- ifelse(shift(d$click_order) < d$click_order, d$selection_rt_ms - shift(d$selection_rt_ms), d$selection_rt_ms)
d$selection_rt_ms_relative[1] <- d$selection_rt_ms[1]
d$accuracy_numeric <- ifelse(d$accuracy_type == 'hit', 1, 0)
subject_summary <- d %>%
group_by(subject, click_order) %>%
summarize(RT = mean(selection_rt_ms_relative), Accuracy = mean(accuracy_numeric))
subject_summary %>%
gather(outcome, value, RT:Accuracy) %>%
ggplot(aes(x = value, y = click_order, group = click_order)) +
geom_density_ridges(fill = 'steel blue', alpha = .8) +
facet_wrap(~outcome, scales = 'free') +
labs(
x = '',
y = 'Click Order'
) +
theme_bw() +
theme(strip.background = element_rect(color = 'black', fill = 'white'),
text = element_text(size = 20))
ggsave('click_order.pdf', height = 1080/96, width = 1920/2/96)
ggsave('click_order.pdf', height = 1000/96, width = 1920/2/96)
q()
