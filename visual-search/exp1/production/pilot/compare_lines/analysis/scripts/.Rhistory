head(d)
keep <- c('participant', 'line_orientation', 'SeqResponse.keys', 'SeqResponse.rt', 'ResponseSimul.keys', 'ResponseSimul.rt', 'left_width', 'right_width', 'first_line_label', 'second_line_label')
d <- d[,keep]
library(tidyverse)
d <- read.csv('../data/compare_lines.csv')
head(d)
keep <- c('participant', 'line_orientation', 'SeqResponse.keys', 'SeqResponse.rt', 'ResponseSimul.keys', 'ResponseSimul.rt', 'left_width', 'right_width', 'first_line_label', 'second_line_label')
d <- d[,keep]
head(d)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
sample(c('a', 'b', 'c'), size = 3, replace = FALSE)
summary(factor(d$participant))
names(summary(factor(d$participant)))
deidentify <- data.frame(name = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
deidentify
data.frame(name = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
data.frame(name = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
data.frame(name = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
d <- inner_join(d, deidentify, by = participant)
d <- inner_join(d, deidentify, by = 'participant')
deidentify <- data.frame(participant = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
d <- inner_join(d, deidentify, by = 'participant')
head(d)
d <- select(d, -participant)
head(d)
## tricky reshaping
colnames(d)[4:5] <- c('SimulResponse.keys', 'SimulResponse.rt')
head(d)
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, '.') %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, block, response_type) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, 'block', 'response_type') %>%
head()
help(separate)
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value)
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
#spread(response_type, value) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
mutate(row_id = 1:(nrow(d))) %>%
spread(response_type, value) %>%
head()
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
mutate(row_id = 1:n()) %>%
spread(response_type, value) %>%
head()
help(spread)
df <- data.frame(row = rep(c(1, 51), each = 3),
var = c("Sepal.Length", "Species", "Species_num"),
value = c(5.1, "setosa", 1, 7.0, "versicolor", 2))
df %>% spread(var, value) %>% str
df %>% spread(var, value, convert = TRUE) %>% str
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
head()
d$row_id <- 1:(nrow(d))
d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
head()
head(d)
new <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
head()
new[!is.na(new$rt),]
nrow(new)
new
new <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value)
new[!is.na(new$rt),]
nrow(new) == nrow(d)
nrow(new[!is.na(new$rt),]) == nrow(d)
new <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
select(!is.na(rt))
new <- new[!is.na(new$rt),]
summary(factor(new$par))
summary(factor(new$id))
summary(factor(d$id))
d <- read.csv('../data/compare_lines.csv')
head(d)
keep <- c('participant', 'line_orientation', 'SeqResponse.keys', 'SeqResponse.rt', 'ResponseSimul.keys', 'ResponseSimul.rt', 'left_width', 'right_width', 'first_line_label', 'second_line_label')
d <- d[,keep]
deidentify <- data.frame(participant = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
d <- d %>%
inner_join(deidentify, by = 'participant') %>%
select(-participant)
## tricky reshaping
colnames(d)[4:5] <- c('SimulResponse.keys', 'SimulResponse.rt')
d$row_id <- 1:(nrow(d))
d <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
filter(!is.na(rt))
summary(factor(d$id))
head(d)
## code accuracy
d$accuracy <- ifelse(d$left_width > d$right_width & d$keys == 'right', 1,
ifelse(d$right_width > d$left_width & d$keys == 'left', 1,
ifelse(d$right_width == d$left_width & d$keys == 'down', 1, 0)))
head(d)
summary(factor(d$left_width))
d$left_width <- round(d$left_width, 2)
d$right_width <- round(d$left_width, 2)
summary(factor(d$left_width))
d %>%
group_by(id, left_width, right_width) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(left_width, right_width) %>%
summarize(accuracy = mean(accuracy))
d$small_width <- ifelse(d$left_width > d$right_width, d$right_width, d$left_width)
d$large_width <- ifelse(d$left_width > d$right_width, d$left_width, d$right_width)
head(d)
head(unite(d, c('small_width', 'large_width'), sep = '-'))
help(unite)
head(unite(d, 'combinations', c('small_width', 'large_width'), sep = '-'))
unite(d, 'combinations', c('small_width', 'large_width'), sep = '-')[50:100]
unite(d, 'combinations', c('small_width', 'large_width'), sep = '-')[50:100,]
unite(d, 'combinations', c('small_width', 'large_width'), sep = '-')[150:200,]
unite(d, 'combinations', c('small_width', 'large_width'), sep = '-')[300:350,]
d <- read.csv('../data/compare_lines.csv')
d$check <- d$left_width - d$right_width
hist(d$check)
d <- read.csv('../data/compare_lines.csv')
head(d)
keep <- c('participant', 'line_orientation', 'SeqResponse.keys', 'SeqResponse.rt', 'ResponseSimul.keys', 'ResponseSimul.rt', 'left_width', 'right_width', 'first_line_label', 'second_line_label')
d <- d[,keep]
deidentify <- data.frame(participant = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
d <- d %>%
inner_join(deidentify, by = 'participant') %>%
select(-participant)
## tricky reshaping
colnames(d)[4:5] <- c('SimulResponse.keys', 'SimulResponse.rt')
d$row_id <- 1:(nrow(d))
d <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
filter(!is.na(rt))
## code accuracy
d$accuracy <- ifelse(d$left_width > d$right_width & d$keys == 'right', 1,
ifelse(d$right_width > d$left_width & d$keys == 'left', 1,
ifelse(d$right_width == d$left_width & d$keys == 'down', 1, 0)))
## round widths
d$left_width <- round(d$left_width, 2)
d$right_width <- round(d$left_width, 2)
## keep widths in same order
d$small_width <- ifelse(d$left_width > d$right_width, d$right_width, d$left_width)
d$large_width <- ifelse(d$left_width > d$right_width, d$left_width, d$right_width)
nrow(d[d$left_width != d$right_width,])
d <- read.csv('../data/compare_lines.csv')
nrow(d[d$left_width != d$right_width,])
nrow(d)
d <- read.csv('../data/compare_lines.csv')
head(d)
keep <- c('participant', 'line_orientation', 'SeqResponse.keys', 'SeqResponse.rt', 'ResponseSimul.keys', 'ResponseSimul.rt', 'left_width', 'right_width', 'first_line_label', 'second_line_label')
d <- d[,keep]
deidentify <- data.frame(participant = names(summary(factor(d$participant))), id = sample(c('a', 'b', 'c'), size = 3, replace = FALSE))
d <- d %>%
inner_join(deidentify, by = 'participant') %>%
select(-participant)
d %>%
mutate(check = left_width - right_width) %>%
filter(check != 0) %>%
nrow()
colnames(d)[4:5] <- c('SimulResponse.keys', 'SimulResponse.rt')
d$row_id <- 1:(nrow(d))
d <- d %>%
gather(var, value, SeqResponse.keys, SeqResponse.rt, SimulResponse.keys, SimulResponse.rt) %>%
separate(var, c('block', 'response_type')) %>%
spread(response_type, value) %>%
filter(!is.na(rt))
d %>%
mutate(check = left_width - right_width) %>%
filter(check != 0) %>%
nrow()
d$accuracy <- ifelse(d$left_width > d$right_width & d$keys == 'right', 1,
ifelse(d$right_width > d$left_width & d$keys == 'left', 1,
ifelse(d$right_width == d$left_width & d$keys == 'down', 1, 0)))
## round widths
d$left_width <- round(d$left_width, 2)
d$right_width <- round(d$right_width, 2)
## keep widths in same order
d$small_width <- ifelse(d$left_width > d$right_width, d$right_width, d$left_width)
d$large_width <- ifelse(d$left_width > d$right_width, d$left_width, d$right_width)
d %>%
mutate(check = left_width - right_width) %>%
filter(check != 0) %>%
nrow()
head(d)
d[50:100,]
head(unite(d, 'var', c('small_width', 'large_width'), sep = '-'))
d %>%
unite('combinations', c('left_width', 'right_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
head()
head(d)
d %>%
unite('combinations', c('left_width', 'right_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
#group_by(combinations) %>%
#summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
head()
d %>%
unite('combinations', c('left_width', 'right_width'), sep = '-') %>%
head()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy), left_width = unique(left_width), right_width = unique(right_width)) %>%
head()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
separate(combinations, c('small_width', 'large_width')) %>%
head()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
head()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
head()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile()
d[d$left_width == 4 & d$right_width == 1,]
## code accuracy
d$accuracy <- ifelse(d$left_width < d$right_width & d$keys == 'right', 1,
ifelse(d$right_width < d$left_width & d$keys == 'left', 1,
ifelse(d$right_width == d$left_width & d$keys == 'down', 1, 0)))
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile() +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw()
d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
d$tool_tip <- paste0('Left width: ', d$left_width, '\nRight Width: ', d$right_width, '\nAccuracy: ', d$accuracy)
p1 <- d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
#head()
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
library(plotly)
ggplotly(p1, tooltip = 'tool_tip')
p1 <- d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
mutate(text = paste0('Left width: ', d$left_width, '\nRight Width: ', d$right_width, '\nAccuracy: ', d$accuracy)) %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy, text = text)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
ggplotly(p1, tooltip = 'text')
p1 <- d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
mutate(text = paste0('Left width: ', left_width, '\nRight Width: ', right_width, '\nAccuracy: ', accuracy)) %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy, text = text)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
ggplotly(p1, tooltip = 'text')
p1 <- d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
mutate(text = paste0('Small width: ', small_width, '\nLarge Width: ', large_width, '\nAccuracy: ', accuracy)) %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy, text = text)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
ggplotly(p1, tooltip = 'text')
d %>%
group_by(id, block, line_orientation) %>%
summarize(acc = mean(accuracy)) %>%
group_by(block, line_orientation) %>%
summarize(accuracy = mean(acc), se = sd(acc) / sqrt(N)) %>%
ggplot(aes(x = block, y = accuracy, group = line_orientation)) +
geom_errorbar(aes(ymin = accuracy - se, ymax = accuracy + se), width = .5, position = position_dodge(width = .9)) +
geom_bar(stat = 'identity', aes(fill = line_orientation), position = position_dodge(width = .9)) +
theme_bw()
N <- d %>%
group_by(id) %>%
summarize(n()) %>%
nrow()
d %>%
group_by(id, block, line_orientation) %>%
summarize(acc = mean(accuracy)) %>%
group_by(block, line_orientation) %>%
summarize(accuracy = mean(acc), se = sd(acc) / sqrt(N)) %>%
ggplot(aes(x = block, y = accuracy, group = line_orientation)) +
geom_errorbar(aes(ymin = accuracy - se, ymax = accuracy + se), width = .5, position = position_dodge(width = .9)) +
geom_bar(stat = 'identity', aes(fill = line_orientation), position = position_dodge(width = .9)) +
theme_bw()
d %>%
group_by(id, block, line_orientation) %>%
summarize(acc = mean(accuracy)) %>%
group_by(block, line_orientation) %>%
summarize(accuracy = mean(acc), se = sd(acc) / sqrt(N)) %>%
ggplot(aes(x = block, y = accuracy, group = line_orientation)) +
geom_errorbar(aes(ymin = accuracy - se, ymax = accuracy + se), width = .5, position = position_dodge(width = .9)) +
geom_bar(stat = 'identity', aes(fill = line_orientation), position = position_dodge(width = .9)) +
ylim(0,1) +
theme_bw()
d %>%
group_by(id, block, line_orientation) %>%
summarize(acc = mean(accuracy)) %>%
group_by(block, line_orientation) %>%
summarize(accuracy = mean(acc), se = sd(acc) / sqrt(N)) %>%
ggplot(aes(x = block, y = accuracy, group = line_orientation)) +
geom_bar(stat = 'identity', aes(fill = line_orientation), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = accuracy - se, ymax = accuracy + se), width = .5, position = position_dodge(width = .9)) +
ylim(0,1) +
theme_bw()
ggplotly(p1, tooltip = 'text')
p1 <- d %>%
unite('combinations', c('small_width', 'large_width'), sep = '-') %>%
group_by(id, combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
group_by(combinations, block) %>%
summarize(accuracy = mean(accuracy)) %>%
separate(combinations, c('small_width', 'large_width'), sep = '-') %>%
mutate(text = paste0('Small width: ', small_width, '\nLarge Width: ', large_width, '\nAccuracy: ', round(accuracy,2))) %>%
ggplot(aes(x = small_width, y = large_width, fill = accuracy, text = text)) +
geom_tile() +
facet_wrap(~block) +
labs(
x = 'Line 1',
y = 'Line 2',
fill = 'Accuracy'
) +
theme_bw() +
theme(strip.background = element_rect(fill = NA, color = 'black'))
ggplotly(p1, tooltip = 'text')
q()
